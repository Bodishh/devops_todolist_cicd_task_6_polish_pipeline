name: python-deployment

run-name: ${{ github.actor }} - ${{ github.ref_name }} - ${{ github.sha }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options: ['dev', 'staging', 'production']
      artifact:
        description: 'Artifact to deploy (e.g. ubuntu-latest-3.9)'
        required: true
        type: string
      message:
        description: 'Message to include in the deployment'
        required: false
        type: string

env:
  DockerImageName: todoapp

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python-ci:
    name: Python CI (${{ matrix.OsType }} - ${{ matrix.PythonVersion }})
    runs-on: ${{ matrix.OsType }}
    strategy:
      matrix:
        PythonVersion: [3.8, 3.9]
        OsType: [ubuntu-latest, windows-latest]
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.PythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.PythonVersion }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8
          pip install -r requirements.txt

      - name: Run tests
        run: python manage.py test

      - name: Generate Coverage Report
        run: |
          coverage run --source='.' manage.py test
          coverage report

      - name: Linting
        run: flake8 . --show-source --statistics --exit-zero

      - name: Check Complexity
        run: flake8 . --exit-zero --max-complexity=6

      - name: Upload Python Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-${{ matrix.OsType }}-${{ matrix.PythonVersion }}
          path: .

      - name: Upload Helm Artifacts
        if: github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: helm-artifacts
          path: ${{ github.workspace }}/helm-charts

      - name: Upload Kind Cluster Artifact
        if: github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: kind-cluster
          path: ${{ github.workspace }}/cluster.yml

  docker-ci:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: python-ci
    if: ${{ github.ref_name == 'main' }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-ubuntu-latest-3.8
          path: ./src

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./src
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DockerImageName }}:${{ github.sha }}

  helm-ci:
    name: Helm Lint & Template
    runs-on: ubuntu-latest
    needs: python-ci
    if: github.ref_name == 'main'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: helm-artifacts
          path: .

      - name: Set Up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Lint Helm
        run: helm lint ./todoapp/

      - name: Template Helm
        run: helm template todoapp ./todoapp/ -f ./todoapp/values.yaml

      - name: Package Helm
        run: helm package ./todoapp

      - name: Upload Helm Package
        uses: actions/upload-artifact@v4
        with:
          name: helm-package
          path: ./*.tgz

  deploy-helm-dev:
    name: Deploy to Development
    if: github.event_name == 'workflow_dispatch' && inputs.environment == 'dev'
    needs: [helm-ci, docker-ci]
    uses: ./.github/workflows/reusable-deployment.yml
    secrets: inherit
    with:
      environment: development
      version: ${{ github.sha }}
      artifact: ${{ inputs.artifact }}

  deploy-helm-stg:
    name: Deploy to Staging
    if: github.event_name == 'workflow_dispatch' && inputs.environment == 'staging'
    needs: [deploy-helm-dev]
    uses: ./.github/workflows/reusable-deployment.yml
    secrets: inherit
    with:
      environment: staging
      version: ${{ github.sha }}
      helm-values-path: ./todoapp/values/stg.yaml
      helm-release-name: todoapp-staging
      artifact: ${{ inputs.artifact }}

